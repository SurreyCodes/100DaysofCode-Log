During My 100 days of code challenge I will be attempting to complete the entire FreeCodeCamp curriculum!

Day 34 - March 5th, 2018:
    Got the Math working, now onto styling and figuring out how to show a rounded answer it seems to work for my history but not for the main display.
Day 33 - March 4th, 2018: <!-- I will call this: Overkill hahaha -->
    Decided to switch my calculator function to React. was a bit of a struggle figuring out how to dynamically render my keypad, but in the end figured it out! Got to love problem solving! code below >>
    https://codepen.io/crathor/full/jZRjPx/

Day 32 - March 3rd, 2018:
    Started a CSS grid course on https://courses.wesbos.com. Which helped me get the grid up and running for my JavaScript calculator on FreeCodeCamp. Link below for my code so far >>
    https://codepen.io/crathor/pen/PQLMrw?editors=0110

    The course so far has gone through display : grid and setting up the colums using px, rem, %, fr (stands for fractional allows the grid spaces to take up space proportional to the fraction ie 1fr 2fr 1fr the 2fr will take up the combine space of the 1fr's).
    also learned how to place the items in there grids or span extra spaces like I have done in my calculator app.

Day 31 - March 2nd, 2018:
    Finished 'pairwise' on FreeCodeCamp and finally made it to the last 4 projects!! excited to finish this and get my Front End certificate!
    Code Below >>

    function pairwise(arr, arg) {
      var results = [];
      for (var i=0; i<arr.length; i++){
          var a = arr[i];
        for (var j=i+1; j<arr.length; j++){
          if(a + arr[j] === arg){
            console.log(j,"  ", results.indexOf(j));
            if(results.indexOf(i) === -1 && results.indexOf(j) === -1){
              results.push(i, j);
            }
          }
        }
      }
      if (results.length === 0){
        return 0;
      }
      return results.reduce(function(a,b){return a+b;});
    }

Day 30 - March 1st, 2018:
    Finished the 'Map the debris' challenge and onto 'pairwise'. Last challenge before the projects begin!! Can't Wait to get started! Also side note found out today that the company I currently work for is closing in 2 months, looks like the time is now to start looking for Front End Developer jobs! pair wise is currently presenting a weird challenge for me can't see to figure out how to sum the indices correctly.
    Code Below >>

    function orbitalPeriod(arr) {

      var GM = 398600.4418;
      var earthRadius = 6367.4447;
      var result = [];

      for (var i=0; i<arr.length; i++){
        var orbitalPeriod = Math.round(2 * Math.PI * Math.sqrt(Math.pow((earthRadius + arr[i].avgAlt), 3)/GM));
        result.push({name: arr[i].name, orbitalPeriod: orbitalPeriod});
      }

      return result;
    }


Day 29 - Feb.28th, 2018:
    Solved the 'no repeats'! took me a long time to spot my mistake.. ended up having heapPerm(size - i) instead of (size - 1). Literally put my code into an infinite loop. Sometimes I wonder how old systems use to handle infinite loops, can only imagine how brutal it would have been trying to debug :P
    Anyways also passed the challenge of method inside closures, basically a class with methods in my opinion.
    Currently tackling the 'Map the Debris' challenge. Math Math Math!

Day 28 - Feb.27th, 2018:
    Almost solved the 'no repeats' on FreeCodeCamp. have it creating the permutations, just need to filter out the doubles and return the results. should be too hard provided I am in fact making the correct permutations :P

Day 27 - Feb.26th, 2018:
    Attempted to solve the no repeats with pure math while trying to avoid creating an array and using regex. found that the only way was to program each separate solution in and that is not efficient. So to the drawing board I went. have most of the code working, still need to figure out how to truly randomize the letters. here is the code so far ->

function permAlone(str) {
  var permutations = factorial(str.length);
  var count = 0;
  var arr = [];
  var perms = [];
  var offset = 0;

  while(count < permutations){

    var temp = [];
    for( var i=0; i < str.length; i++) {
      var pointer = (i + offset) % str.length;
      temp.push(str[pointer]);
    }
   arr.push(temp);
   offset++;
   count++;
 }


  arr.forEach(function(item){
    var res = 1;
    for(var i=0; i<item.length; i++){
      if(item[i] === item[i+1]){
        res = 0;
        continue;
      }
    }
    perms.push(res);
  });


  console.log(perms.reduce(function(a,b){return a+b;}));
  return perms.reduce(function(a,b){return a+b;});
}


permAlone('aabb');

function factorial(num){
  for (var i=num-1; i>0; i--){
    num *= i;
  }
  return num;
}

Wish me luck as I continue down the path to Front End Developer!!! counting down the days til I get to do projects again!!

Day 26 - Feb.25th, 2018:
    Read about permutations trying to figure out how to do the math for the current FreeCodeCamp algorithm 'no repeats please'.

Day 25 - Feb.24th, 2018:
    Finished the Update Inventory algorithm. I knew I had to use a sort function at the very end but was hard pressed in finding a solution that worked until I came across one on stackoverflow (where would we be without stackoverflow.. :P). solution here ->

    function updateInventory(arr1, arr2) {
    // All inventory must be accounted for or you're fired!
    arr2.forEach((newItem, newIndex) => {
        arr1.forEach((currItem, index) => {
          if (newItem[1] === currItem[1]){
            arr1[index][0] += newItem[0];
          }
        });
      if(!checkArray(arr1, newItem[1])){
        arr1.push(arr2[newIndex]);
        }
    });

  function checkArray(arr, value){
    var bool = false;
    arr.forEach((item)=>{
      if(item[1] === value){
        bool = true;
      }
    });
    return bool;
  }

    return arr1.sort(function(a, b){
      var A=a[1].toLowerCase(), B=b[1].toLowerCase();
      if (A < B) //sort string ascending
      return -1;
      if (A > B)
      return 1;
      return 0; //default return value (no sorting)
      });
}

Wish me luck with the next challenge!

Day 24 - Feb.23rd, 2018:
    Finished the Exact Change algorithm. took a while but I was able to crack it!
    code below ->

    function checkCashRegister(price, cash, cid) {
      var change = cash - price;
      var cashOnHand = 0;

      var currency = [
        { name: 'ONE HUNDRED', val: 100.00},
        { name: 'TWENTY', val: 20.00},
        { name: 'TEN', val: 10.00},
        { name: 'FIVE', val: 5.00},
        { name: 'ONE', val: 1.00},
        { name: 'QUARTER', val: 0.25},
        { name: 'DIME', val: 0.10},
        { name: 'NICKEL', val: 0.05},
        { name: 'PENNY', val: 0.01},
      ];

      // adds each amount of currency in the drawer
      for (var i in cid.reverse()){
        currency[i].amount = cid[i][1];
        cashOnHand += cid[i][1];
      }

      // takes obvious insufficient funds
      if (cashOnHand < change){
        return "Insufficient Funds";
      } else if (cashOnHand === change){
        return "Closed";
      } else{
        change = getChange(change, currency);
      }
      // Here is your change, ma'am.
      return change;
      }

      function getChange(amount, arr){

      var change_arr = [];
      for (var i in arr){
        var currentChange = 0;
        while (arr[i].amount > 0 && arr[i].val <= amount){

          currentChange += arr[i].val;
          arr[i].amount -= arr[i].val;
          amount -= arr[i].val;
          amount = Math.round(amount * 100) / 100;
        }
        if (currentChange > 0){
          currentChange = Math.round(currentChange * 100) / 100;
          change_arr.push([arr[i].name, currentChange]);
        }
      }
      if(amount !==0){
        return "Insufficient Funds";
      }
      return change_arr;
}

checkCashRegister(19.50, 20.00, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.10], ["QUARTER", 4.25], ["ONE", 90.00], ["FIVE", 55.00], ["TEN", 20.00], ["TWENTY", 60.00], ["ONE HUNDRED", 100.00]]);

Having to rounding the amount tripped me up for a very long time, also accidentally compared arr[i].amount instead of .val and that sent me on a wild goose chase! The joys of learning :P

Day 23 - Feb.22nd, 2018:
    FreeCodeCamp section 283. Currently stuck on the how to best store the data for easy iteration when calculating Exact Change. I have the first 2 parts of the algorithm complete.

Day 22 - Feb.21st, 2018:
    FreeCodeCamp section 282 to 283. Finally solved the symmetrical difference algorithm. had to build a function that took two arrays and looped eachother for differences returning one result that could then be looped with another array if one existed. Onto the Exact Change challenge!

/*---- You are too far away now haha - Luis ---*/
Day 21 - Feb.19th, 2018:
    FreeCodeCamp section 282. Stuck on this algorithm. can solve it for 2 arrays, but once there is a third array my current code fails. Time to go watch Black Panther! and of course mull over some ideas for how to correct my code.

Day 20 - Feb.19th, 2018:
    FreeCodeCamp sections 280 to 282. Solved the regex expression for US telephone numbers. Found a great resource for creating them -> https://regexr.com/
    afterwards I completed the algorithm for updating objects by either adding to them or deleting from them, based on the data provided.

Day 19 - Feb.18th, 2018:
    FreeCodeCamp sections 275 to 280. onto the advanced algorithms. predicting a slower progression through this section. going to have to read even more now on regex to build one for US Telephone numbers. I love learning the algorithms and the challenges they pose, but I still wish there was context on where they would come in handy.

Day 18 - Feb.17th, 2018:
    FreeCodeCamp sections 270 to 275. Finished a few more challenges. not much to say just been reading and attempting to solve algorithms until I found a solution. getting excited for some of the advanced algorithms coming up.

Day 17 - Feb.16th, 2018:
    FreeCodeCamp section 270. Completed the algorithm challenge after about 3 hours of reading and attempting different methods. Finally made something that worked after many attempts. here is the code ->

    function spinalCase(str) {

      str = str.replace(/([-_\s])/g, "_");
      str = str.replace(/([A-Z])/g, "_$1");

      return str.split("_").filter(function(val){return val !== "";}).join("-").toLowerCase();
    }
    Weekend has arrived. time to hit these challenges hard! and possibly work on a landing page for SurreyCodes if Luis has time to design it.

Day 16 - Feb.15th,2018:
    FreeCodeCamp sections 268 to 270. Algorithms are getting harder now. spent sometime reading about regex. was able to get through one of the challenges, sadly the day has run late. time to rest and look at it with fresh eyes tomorrow. Also had a meeting today about the Surreycodes foundation, excited to see the outcome of the foundation.

Day 15 - Feb.14th, 2018:
    Not much coding today due to it being Valentines day. did manage to do a couple sections on FreeCodeCamp I am now on 268. Also did a little work on some issues with the SurreyCodes website.

Day 14 - Feb.13th, 2018:
    FreeCodeCamp sections 263 to 266. Made it to the missing letters algorithm. I have tried a few different ways of attacking the problem. however I keep hitting a snag with character that are the final letter. they produce a NaN by default and I am having issues figuring out how to solve it. Tomorrow is a new day! Perhaps fresh eyes will help.

Day 13 - Feb.12th, 2018:
    FreeCodeCamp section 262 to 263. Took awhile but I finally cracked the algorithm to check an array of properties against another argument. Code below =>

    function whatIsInAName(collection, source) {
  // What's in a name?
  var arr = [];
  var i;
  // Only change code below this line
  var sourceArr = Object.keys(source);
  if (sourceArr.length > 1){
    for (i=0; i<collection.length; i++){
      if (collection[i].hasOwnProperty(sourceArr[0]) && collection[i].hasOwnProperty(sourceArr[1]) && collection[i][sourceArr[0]] === source[sourceArr[0]] && collection[i][sourceArr[1]] === source[sourceArr[1]]){
      arr.push(collection[i]);
      }
    }
  } else{
    for (i=0; i<collection.length; i++){
      if (collection[i].hasOwnProperty(sourceArr[0]) && collection[i][sourceArr[0]] === source[sourceArr[0]]){
      arr.push(collection[i]);
      }
    }
  }

  // Only change code above this line
  return arr;
}

whatIsInAName([{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, { first: "Tybalt", last: "Capulet" }], { last: "Capulet" });

It took me about 5 hours of writing code and pondering different ways to do it while keeping the line count down. If anyone else is reading my progress and has a better solution than the one above please PM me with the answer!


Day 12 - Feb.11th, 2018:
    FreeCodeCamp sections 259 to 262. Struggled for about 5 hours on the Roman Numeral algorithm challenge before finally admitting defeat. My code was over 100 lines long and was by no means efficient. after viewing the answer, I made sure to read it and understand it before moving on. Today is the first day of 100DaysOfCode that I had to use a lifeline.

Day 11 - Feb.10th, 2018:
    FreeCodeCamp section 258 to 259. Completed the TwitchTV Project. Had a lot of fun adding my own flavor. really enjoyed working with the Twitch API. Learned a ton of stuff about React as I continued through the project. Struggled mostly with updating components through state changes (specifically which life-cycle method to call). I may not have built it to React standards but it is fully functioning :) On to bigger challenges and more bugs to fix!!

Day 10 - Feb.9th, 2018:
    FreeCodeCamp section 258. Found out I had programmed some functions against the standards of React. Started reading more documentation on componentDidMount as well as other built in methods. Have to redo some of the code in order to correct the issue. Got most of the styling done. just have to propgram an online-offline status signal and add the functionality for showing Online only, Offline only and All.

Day 9 - Feb.8th, 2018:
    FreeCodeCamp section 258. Started working on the TwitchTv Project. I decided to add more than what is required functionally so that I could push myself a little further to gain more knowledge and understanding. Got the app pulling all the data I need, now I am excited to style it all!

Day 8 - Feb.7th, 2018:
    FreeCodeCamp section 257. Finished the Wikipedia Viewer project. Figured out how to setup CORS and pull in the data required to complete the challenge. I decided to do the challenge in React to get more practice and keep my existing knowledge of it relevant. Now onto the TwitchTV JSON API challenge. Will also attempt to complete it in React :)

Day 7 - Feb.6, 2018:
    FreeCodeCamp section 257. Worked on the Wikipedia Viewer project. have the css completed and all the functions set up. did some reading on CORS and attempted to get a succesful API request with no success. Keeping my head up there is always another day.

Day 6 - Feb.5, 2018:
    FreeCodeCamp sections 247 to 257. Finished the Weather App Project. On to the Wikipedia Viewer. Learned a great deal about setting elements based on API calls. very good challenge for getting the data you want to display how and when you want it to!!. Awesome challenge looking forward to them becoming more and more challenging.

Day 5 - Feb.4, 2018:
    FreeCodeCamp sections 240 to 247. Finished the JSON section and move on the the first intermediate project, the random quote generator. Still need to figure out how to escape some characters when passing them to twitter API! Other than that the project was completed today!

Day 4 - Feb.3, 2018:
    FreeCodeCamp sections 232 to 240. Finished the algorithm challenge and started the section on JSON and ajax requests using jQuery.

Day 3 - Feb.2, 2018:
    FreeCodeCamp sections 223 to 232. Completed more of the challenges, currently stuck on checking whether all characters of one array index exist in another. I am more stuck on words that are in reverse. (perhaps i will have to reverse or sort).

Day 2 - Feb.1, 2018:
    FreeCodeCamp sections 202 to 223. Learned more about Arrays, specifically functions like :
    - split, reduce, filter, sort, reverse, concat, join, and map.
    also went through regular expressions. (Still need to read more on them to understand more).
    I have now started the section of algorithm challenges!

Day 1 - Jan.31, 2018:
    Worked On FreeCodeCamp sections 183 to 202. Learned about Arrays, Objects and the Math.Random() function.
